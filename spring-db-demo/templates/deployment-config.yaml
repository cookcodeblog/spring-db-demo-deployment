apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations: {}
  labels:
    {{- include "spring-db-demo.app.labels" . | nindent 4 }}
  name: {{ include "spring-db-demo.fullname" . }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 10
  selector:
    {{- include "spring-db-demo.app.selectorLabels" . | nindent 4 }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "spring-db-demo.app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.env.SPRING_PROFILES_ACTIVE }}
          envFrom:
            - secretRef:
                name: mysql
          image: ' '
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: {{ .Values.container.name }}
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - {{ .Values.container.name }}
        from:
          kind: ImageStreamTag
          name: {{ .Values.image.name }}:{{ .Values.image.version }}
      type: ImageChange
    - type: ConfigChange
